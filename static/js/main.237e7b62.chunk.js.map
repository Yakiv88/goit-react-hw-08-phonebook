{"version":3,"sources":["redux/contacts/actions.js","redux/contacts/selector.js","Components/Filter/Filter.js","redux/contacts/operations.js","Components/ContactList/ContactList.js","views/ContactForm/ContactForm.js","views/HomeView/HomeView.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","views/LoginView/LoginView.js","views/RegisterView/RegisterView.js","Components/Navigation.js","Components/UserMenu/UserMenu.js","Components/AuthNav.js","Components/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","Components/Loader/Loader.js","App/App.js","redux/contacts/reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","views/RegisterView/RegisterView.module.css","views/ContactForm/ContactForm.module.css","views/LoginView/LoginView.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","App/App.module.css","Components/UserMenu/UserMenu.module.css"],"names":["filterChange","createAction","getContacts","state","contacts","items","getFilter","filter","allFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","Filter","useSelector","dispatch","useDispatch","className","s","wrapper","label","input","type","value","onChange","e","target","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContacts","contact","post","deleteContacts","contactId","rejectWidthValue","delete","status","Error","message","operations","ContactList","useEffect","listWrapper","contactsList","map","number","id","item","textWrapper","text","button","onClick","toast","success","ContactForm","useState","setName","setNumber","inputChange","evt","resetForm","formWrapper","title","form","onSubmit","preventDefault","find","alert","labelWrapper","placeholder","pattern","styles","container","minHeight","display","alignItems","justifyContent","fontWeight","fontSize","textAlign","HomeView","style","token","headers","common","Authorization","register","credentials","error","logIn","logOut","refreshCurrentUser","thunkAPI","getState","persistedToken","auth","authOperations","authSelectors","getIsLoggedIn","isLoggedIn","getUserName","user","getIsRefreshingCurrentUser","isRefreshing","getToken","getisLoading","isLoading","LoginView","email","setEmail","password","setPassword","handleChange","autoComplete","inputs","minLength","to","link","RegisterView","textDecoration","padding","color","activeLink","Navigation","avatar","marginRight","UserMenu","Avatar","src","btn","AuthNav","MenuAppBar","React","anchorEl","setAnchorEl","handleClose","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","MenuItem","IconButton","size","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","PrivateRoute","C","PublicRoute","Component","restricted","shouldRedirect","redirectTo","spinner","marginBottom","Loader","role","App","isRefreshingCurrentUser","fallback","path","element","autoClose","createReducer","fulfilled","payload","combineReducers","authSlice","createSlice","initialState","extraReducers","action","rejected","pending","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.237e7b62.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nconst filterChange = createAction(\"contacts/filter\");\n\nexport default filterChange;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const allFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport filterChange from \"../../redux/contacts/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/selector\";\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <></>\n      <div className={s.wrapper}>\n        <label className={s.label}>\n          Find contacts by name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={filter}\n            onChange={(e) => dispatch(filterChange(e.target.value))}\n          />\n        </label>\n      </div>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com'\n\nconst fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts')\n      return data\n    } catch (error) {\n      rejectWithValue(error)\n    }\n  },\n)\n\nconst addContacts = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/contacts', contact)\n      return data\n    } catch (error) {\n      rejectWithValue(error)\n    }\n  },\n)\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, { rejectWidthValue }) => {\n    try {\n      const resp = await axios.delete(`/contacts/${contactId}`)\n      if (resp.status === 200) {\n        return contactId\n      } else {\n        throw new Error({ message: 'error' })\n      }\n    } catch (error) {\n      rejectWidthValue(error.message)\n    }\n  },\n)\n\nconst operations = { addContacts, deleteContacts, fetchContacts }\n\nexport default operations\n","import s from './ContactList.module.css'\nimport PropTypes from 'prop-types'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { allFilteredContacts } from '../../redux/contacts/selector'\nimport operations from '../../redux/contacts/operations'\nimport { useEffect } from 'react'\nimport { toast } from 'react-toastify'\n\nconst ContactList = () => {\n  const getContacts = useSelector(allFilteredContacts)\n  const dispatch = useDispatch()\n  // console.log(getContacts);\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts())\n  }, [dispatch])\n\n  return (\n    <div className={s.listWrapper}>\n      <ul className={s.contactsList}>\n        {getContacts.map(({ name, number, id }) => {\n          return (\n            <ol className={s.item} key={id}>\n              <div className={s.textWrapper}>\n                <p className={s.text}>{name}:</p>\n                <p className={s.text}>{number}</p>\n              </div>\n              <button\n                className={s.button}\n                type=\"button\"\n                onClick={() =>\n                  dispatch(\n                    operations.deleteContacts(\n                      id,\n                      toast.success(\n                        `Contact ${name} has been deleted successfully!`,\n                      ),\n                    ),\n                  )\n                }\n              >\n                Delete\n              </button>\n            </ol>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nContactList.propTypes = {\n  getContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n}\n\nexport default ContactList\n","import s from './ContactForm.module.css'\nimport Filter from '../../Components/Filter/Filter'\nimport ContactList from '../../Components/ContactList/ContactList'\nimport { useState } from 'react'\nimport operations from '../../redux/contacts/operations'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getContacts } from '../../redux/contacts/selector'\nimport { toast } from 'react-toastify'\n\nfunction ContactForm() {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const contacts = useSelector(getContacts)\n  const dispatch = useDispatch()\n\n  const inputChange = (evt) => {\n    switch (evt.target.name) {\n      case 'name':\n        setName(evt.target.value)\n        break\n\n      case 'number':\n        setNumber(evt.target.value)\n        break\n      default:\n        return\n    }\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      return alert('This contact has already been added to the list')\n    }\n    dispatch(operations.addContacts({ name, number }))\n    toast.success(`Contact ${name} has been added to the list~`)\n    resetForm()\n  }\n\n  const resetForm = () => {\n    setName('')\n    setNumber('')\n  }\n\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <h1 className={s.title}>Phonebook</h1>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <div className={s.labelWrapper}>\n            <label className={s.label}>\n              Name\n              <input\n                className={s.input}\n                value={name}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                onChange={inputChange}\n              />\n            </label>\n\n            <label className={s.label}>\n              Number\n              <input\n                className={s.input}\n                type=\"tel\"\n                value={number}\n                name=\"number\"\n                placeholder=\"Number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                onChange={inputChange}\n              />\n            </label>\n          </div>\n\n          <button className={s.button}>Add contact</button>\n        </form>\n      </div>\n      <div>\n        <h2 className={s.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  )\n}\n\nexport default ContactForm\n","import React from 'react'\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n}\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>Welcome to phonebook </h1>\n  </div>\n)\n\nexport default HomeView\n","import axios from 'axios'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport { toast } from 'react-toastify'\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com'\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = ''\n  },\n}\n\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials)\n      token.set(data.token)\n      return data\n    } catch (error) {\n      rejectWithValue(toast.error(`Try again please!`))\n    }\n  },\n)\n\nconst logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials)\n      token.set(data.token)\n      return data\n    } catch (error) {\n      rejectWithValue(toast.error(`Try again please!`))\n    }\n  },\n)\n\nconst logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout')\n      token.unset()\n    } catch (error) {\n      return rejectWithValue(error.message)\n      // return console.log('error on logOut', error)\n    }\n  },\n)\n\nconst refreshCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState()\n    const persistedToken = state.auth.token\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue()\n    }\n    token.set(persistedToken)\n    try {\n      const { data } = await axios.get('/users/current')\n      return data\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message)\n    }\n  },\n)\n\nconst authOperations = {\n  register,\n  logIn,\n  logOut,\n  refreshCurrentUser,\n}\n\nexport default authOperations\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn\nconst getUserName = (state) => state.auth.user.name\nconst getIsRefreshingCurrentUser = (state) => state.auth.isRefreshing\n\nconst getToken = (state) => state.auth.token\nconst getisLoading = (state) => state.auth.isLoading\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getIsRefreshingCurrentUser,\n\n  getToken,\n  getisLoading,\n}\n\nexport default authSelectors\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport authOperations from '../../redux/auth/auth-operations'\nimport s from './LoginView.module.css'\nimport authSelectors from '../../redux/auth/auth-selectors'\n\nimport { Link } from 'react-router-dom'\n\nexport default function LoginView() {\n  const dispatch = useDispatch()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value)\n      case 'password':\n        return setPassword(value)\n      default:\n        return\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(authOperations.logIn({ email, password }))\n    setEmail('')\n    setPassword('')\n  }\n\n  return (\n    !isLoggedIn && (\n      <div className={s.container}>\n        <h1 className={s.title}>Sign in</h1>\n\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <div className={s.inputs}>\n            <label className={s.label}>\n              E-mail\n              <input\n                className={s.input}\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n                autoComplete=\"off\"\n              />\n            </label>\n\n            <label className={s.label}>\n              Password\n              <input\n                className={s.input}\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n                minLength=\"8\"\n                autoComplete=\"off\"\n              />\n            </label>\n          </div>\n\n          <button type=\"submit\" className={s.button}>\n            Log in\n          </button>\n        </form>\n        <p className={s.text}>\n          Don't have an account?\n          <Link to=\"/register\" className={s.link}>\n            Sign up\n          </Link>\n        </p>\n      </div>\n    )\n  )\n}\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport s from \"./RegisterView.module.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"name\":\n        return setName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Sign Up</h1>\n\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <div className={s.inputs}>\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              autoComplete=\"off\"\n            />\n          </label>\n\n          <label className={s.label}>\n            E-mail\n            <input\n              className={s.input}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              autoComplete=\"off\"\n            />\n          </label>\n\n          <label className={s.label}>\n            Password\n            <input\n              className={s.input}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              minLength=\"8\"\n              autoComplete=\"off\"\n            />\n          </label>\n        </div>\n\n        <button className={s.button} type=\"submit\">\n          Register\n        </button>\n      </form>\n      <p className={s.text}>\n        Already have an account?\n        <Link to=\"/login\" className={s.link}>\n          Sign in\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <nav>\n      <Link to=\"/\" style={styles.link}>\n        Home\n      </Link>\n\n      {isLoggedIn && (\n        <Link to=\"/contacts\" style={styles.link}>\n          Contacts\n        </Link>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport Avatar from \"@mui/material/Avatar\";\nimport s from \"./UserMenu.module.css\";\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: 10,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <div style={styles.container}>\n      <Avatar src=\"/broken-image.jpg\" style={styles.avatar} />\n\n      <span style={styles.name}>Welcome, {name}</span>\n      <button\n        className={s.btn}\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Log out\n      </button>\n    </div>\n  );\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n}\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <Link to=\"/register\" style={styles.link}>\n        Sign Up\n      </Link>\n      <Link to=\"/login\" style={styles.link}>\n        Sign In\n      </Link>\n    </div>\n  )\n}\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport { useSelector } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu/UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nexport default function MenuAppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Navigation />\n          </Typography>\n          {auth && (\n            <div>\n              {!isLoggedIn ? (\n                <>\n                  <IconButton\n                    size=\"large\"\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                  >\n                    <AccountCircle />\n                  </IconButton>\n                  <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"right\",\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"right\",\n                    }}\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                  >\n                    <MenuItem onClick={handleClose}>\n                      <AuthNav />\n                    </MenuItem>\n                  </Menu>\n                </>\n              ) : (\n                <MenuItem onClick={handleClose}>\n                  <UserMenu />\n                </MenuItem>\n              )}\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import { Navigate } from 'react-router'\n\n\nexport default function PrivateRoute({ isLoggedIn, component: C }) {\n  return <>{isLoggedIn ? <C /> : <Navigate to=\"/login\" />}</>\n}\n","import { Navigate } from 'react-router-dom'\n// import { Navigate, Redirect } from 'react-router'\nexport default function PublicRoute({\n  isLoggedIn,\n  component: Component,\n  restricted = false,\n  redirectTo,\n}) {\n  const shouldRedirect = isLoggedIn && restricted\n\n  return (\n    <>{shouldRedirect ? <Navigate to={'/contacts' || '/'} /> : <Component />}</>\n  )\n}\n","import { ImSpinner3 } from 'react-icons/im'\n\nconst styles = {\n  spinner: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 10,\n    fontSize: 24,\n  },\n}\n\nfunction Loader() {\n  return (\n    <div role=\"alert\">\n      <div style={styles.spinner}>\n        <ImSpinner3 size=\"32\" className=\"icon-spin\" />\n        Loading...\n      </div>\n    </div>\n  )\n}\n\nexport default Loader\n","import s from './App.module.css'\nimport ContactForm from '../views/ContactForm/ContactForm'\nimport { Route, Routes } from 'react-router-dom'\nimport HomeView from '../views/HomeView/HomeView'\nimport LoginView from '../views/LoginView/LoginView'\nimport RegisterView from '../views/RegisterView/RegisterView'\nimport MenuAppBar from '../Components/AppBar'\nimport { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport authOperations from '../redux/auth/auth-operations'\nimport PrivateRoute from '../Components/PrivateRoute'\nimport { useSelector } from 'react-redux'\nimport authSelectors from '../redux/auth/auth-selectors'\nimport PublicRoute from '../Components/PublicRoute'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport { ToastContainer } from 'react-toastify'\nimport Loader from '../Components/Loader/Loader'\nimport { Suspense } from 'react'\n\nfunction App() {\n  const dispatch = useDispatch()\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\n  const isRefreshingCurrentUser = useSelector(\n    authSelectors.getIsRefreshingCurrentUser,\n  )\n\n  const token = useSelector(authSelectors.getToken)\n  useEffect(() => {\n    token && dispatch(authOperations.refreshCurrentUser())\n  }, [dispatch, token])\n\n  return (\n    <div className={s.App}>\n      {!isRefreshingCurrentUser ? (\n        <>\n          <MenuAppBar />\n          <Suspense fallback={<Loader />}>\n            <Routes>\n              <Route\n                path=\"/\"\n                element={\n                  <PublicRoute isLoggedIn={isLoggedIn} component={HomeView} />\n                }\n              />\n              <Route\n                path=\"/register\"\n                element={\n                  <PublicRoute\n                    isLoggedIn={isLoggedIn}\n                    component={RegisterView}\n                    restricted\n                  />\n                }\n              />\n              <Route\n                path=\"/login\"\n                element={\n                  <PublicRoute\n                    isLoggedIn={isLoggedIn}\n                    component={LoginView}\n                    redirectTo=\"/contacts\"\n                    restricted\n                  />\n                }\n              />\n              <Route\n                path=\"/contacts\"\n                element={\n                  <PrivateRoute\n                    isLoggedIn={isLoggedIn}\n                    component={ContactForm}\n                  />\n                }\n              />\n            </Routes>\n          </Suspense>\n        </>\n      ) : (\n        <Loader />\n      )}\n\n      <ToastContainer autoClose={3000} />\n    </div>\n  )\n}\n\nexport default App\n","import filterChange from './actions'\nimport operations from './operations'\nimport { combineReducers } from 'redux'\nimport { createReducer } from '@reduxjs/toolkit'\n\nconst { addContacts, deleteContacts, fetchContacts } = operations\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContacts.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n})\n\nconst filter = createReducer('', {\n  [filterChange]: (_, { payload }) => payload,\n})\n\nexport default combineReducers({\n  items,\n  filter,\n})\n","import { createSlice } from '@reduxjs/toolkit'\nimport authOperations from './auth-operations'\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n  isLoading: false,\n}\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user\n      state.token = action.payload.token\n      state.isLoggedIn = true\n    },\n\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user\n      state.token = action.payload.token\n      state.isLoggedIn = true\n    },\n\n    [authOperations.logOut.fulfilled](state, _) {\n      state.user = { name: null, email: null }\n      state.token = null\n      state.isLoggedIn = false\n    },\n    [authOperations.logOut.rejected](state, action) {\n      state.user = { name: null, email: null }\n      state.token = null\n      state.isLoggedIn = false\n    },\n    [authOperations.refreshCurrentUser.pending](state) {\n      state.isRefreshing = true\n      state.isLoading = true\n    },\n    [authOperations.refreshCurrentUser.fulfilled](state, action) {\n      state.user = action.payload\n      state.isLoggedIn = true\n      state.isRefreshing = false\n      state.isLoading = false\n    },\n    [authOperations.refreshCurrentUser.rejected](state) {\n      state.isRefreshing = false\n    },\n  },\n})\n\nexport default authSlice.reducer\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport contactsReducer from './contacts/reducer'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { authReducer } from './auth'\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n}\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devTools: process.env.NODE_ENV === 'development',\n})\n\nconst persistor = persistStore(store)\n\nexport { store, persistor }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { store, persistor } from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RegisterView_container__3FbzC\",\"title\":\"RegisterView_title__1EN1f\",\"inputs\":\"RegisterView_inputs__2wFoh\",\"text\":\"RegisterView_text__2Et-g\",\"link\":\"RegisterView_link__ySAmT\",\"label\":\"RegisterView_label__3EOGS\",\"input\":\"RegisterView_input__1f9tv\",\"button\":\"RegisterView_button__21s8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__1RIHc\",\"formWrapper\":\"ContactForm_formWrapper__IlJ9U\",\"labelWrapper\":\"ContactForm_labelWrapper__2MfL0\",\"form\":\"ContactForm_form__3zVLS\",\"label\":\"ContactForm_label__Z97D6\",\"input\":\"ContactForm_input__CJXAl\",\"button\":\"ContactForm_button__3xRXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"LoginView_text__3x_9s\",\"link\":\"LoginView_link__3Y160\",\"container\":\"LoginView_container__33qtv\",\"title\":\"LoginView_title__1v3jX\",\"inputs\":\"LoginView_inputs__VC1lW\",\"label\":\"LoginView_label__3TaWx\",\"input\":\"LoginView_input__2aDMh\",\"button\":\"LoginView_button__1wlSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__6sM8D\",\"textWrapper\":\"ContactList_textWrapper__2JZgh\",\"title\":\"ContactList_title__24AMn\",\"text\":\"ContactList_text__1x8xN\",\"button\":\"ContactList_button__28ppz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__ILI0F\",\"input\":\"Filter_input__1sZzL\",\"wrapper\":\"Filter_wrapper__1IqqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__F-nXy\",\"title\":\"App_title__Leqx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"UserMenu_btn__4ox4d\"};"],"sourceRoot":""}