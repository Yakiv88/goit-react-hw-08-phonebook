{"version":3,"sources":["App/App.module.css","Components/UserMenu/UserMenu.module.css","redux/contacts/actions.js","redux/contacts/selector.js","Components/Filter/Filter.js","redux/contacts/operations.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","views/HomeView.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","views/LoginView.js","views/RegisterView.js","Components/Navigation.js","Components/UserMenu/UserMenu.js","Components/AuthNav.js","Components/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","App/App.js","redux/contacts/reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css"],"names":["module","exports","filterChange","createAction","getContacts","state","contacts","items","getFilter","filter","allFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","Filter","useSelector","dispatch","useDispatch","className","s","wrapper","label","input","type","value","onChange","e","target","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContacts","contact","post","deleteContacts","contactId","rejectWidthValue","delete","status","Error","message","operations","ContactList","console","log","useEffect","listWrapper","contactsList","map","number","id","item","textWrapper","text","button","onClick","toast","success","ContactForm","useState","setName","setNumber","inputChange","evt","resetForm","formWrapper","title","form","onSubmit","preventDefault","find","alert","labelWrapper","placeholder","pattern","styles","container","minHeight","display","alignItems","justifyContent","fontWeight","fontSize","textAlign","HomeView","style","token","headers","common","Authorization","register","credentials","error","logIn","logOut","getState","auth","fetch","BASE_USER_URL","method","response","json","refreshCurrentUser","thunkAPI","persistedToken","authOperations","authSelectors","getIsLoggedIn","isLoggedIn","getUserName","user","getIsRefreshingCurrentUser","isRefreshingCurrentUser","getError","theme","createTheme","LoginView","email","setEmail","password","setPassword","setError","errorLogIn","handleChange","handleSubmit","event","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","flexDirection","Avatar","m","bgcolor","Typography","variant","noValidate","mt","TextField","margin","required","fullWidth","autoFocus","autoComplete","FormControlLabel","control","Checkbox","color","Button","mb","RegisterView","length","Grid","spacing","xs","helperText","link","textDecoration","padding","activeLink","Navigation","to","avatar","marginRight","UserMenu","src","btn","AuthNav","MenuAppBar","React","anchorEl","setAnchorEl","handleClose","flexGrow","AppBar","position","Toolbar","MenuItem","IconButton","size","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","PrivateRoute","C","PublicRoute","Component","restricted","shouldRedirect","redirectTo","App","path","element","autoClose","createReducer","fulfilled","payload","action","combineReducers","authSlice","createSlice","initialState","isRefreshing","extraReducers","pending","rejected","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c9cc972.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__F-nXy\",\"title\":\"App_title__Leqx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"UserMenu_btn__4ox4d\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst filterChange = createAction(\"contacts/filter\");\n\nexport default filterChange;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const allFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport filterChange from \"../../redux/contacts/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/selector\";\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <></>\n      <div className={s.wrapper}>\n        <label className={s.label}>\n          Find contacts by name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={filter}\n            onChange={(e) => dispatch(filterChange(e.target.value))}\n          />\n        </label>\n      </div>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\naxios.defaults.baseURL = 'https://61a60b9e8395690017be9007.mockapi.io'\n\nconst fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts')\n      return data\n    } catch (error) {\n      rejectWithValue(error)\n    }\n  },\n)\n\nconst addContacts = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/contacts', contact)\n      return data\n    } catch (error) {\n      rejectWithValue(error)\n    }\n  },\n)\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, { rejectWidthValue }) => {\n    try {\n      const resp = await axios.delete(`/contacts/${contactId}`)\n      if (resp.status === 200) {\n        return contactId\n      } else {\n        throw new Error({ message: 'error' })\n      }\n    } catch (error) {\n      rejectWidthValue(error.message)\n    }\n  },\n)\n\nconst operations = { addContacts, deleteContacts, fetchContacts }\n\nexport default operations\n","import s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { allFilteredContacts } from \"../../redux/contacts/selector\";\nimport operations from \"../../redux/contacts/operations\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst ContactList = () => {\n  const getContacts = useSelector(allFilteredContacts);\n  const dispatch = useDispatch();\n  console.log(getContacts);\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={s.listWrapper}>\n      <ul className={s.contactsList}>\n        {getContacts.map(({ name, number, id }) => {\n          return (\n            <ol className={s.item} key={id}>\n              <div className={s.textWrapper}>\n                <p className={s.text}>{name}:</p>\n                <p className={s.text}>{number}</p>\n              </div>\n              <button\n                className={s.button}\n                type=\"button\"\n                onClick={() =>\n                  dispatch(\n                    operations.deleteContacts(\n                      id,\n                      toast.success(\n                        `Contact ${name} has been deleted successfully!`\n                      )\n                    )\n                  )\n                }\n              >\n                Delete\n              </button>\n            </ol>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  getContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n};\n\nexport default ContactList;\n","import s from \"./ContactForm.module.css\";\nimport Filter from \"../Filter/Filter\";\nimport ContactList from \"../ContactList/ContactList\";\nimport { useState } from \"react\";\nimport operations from \"../../redux/contacts/operations\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/selector\";\nimport { toast } from \"react-toastify\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const inputChange = (evt) => {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"number\":\n        setNumber(evt.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(\"This contact has already been added to the list\");\n    }\n    dispatch(operations.addContacts({ name, number }));\n    toast.success(`Contact ${name} has been added to the list~`);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <h1 className={s.title}>Phonebook</h1>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <div className={s.labelWrapper}>\n            <label className={s.label}>\n              Name\n              <input\n                className={s.input}\n                value={name}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                onChange={inputChange}\n              />\n            </label>\n\n            <label className={s.label}>\n              Number\n              <input\n                className={s.input}\n                type=\"tel\"\n                value={number}\n                name=\"number\"\n                placeholder=\"Number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                onChange={inputChange}\n              />\n            </label>\n          </div>\n\n          <button className={s.button}>Add contact</button>\n        </form>\n      </div>\n      <div>\n        <h2 className={s.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react'\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n}\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>Welcome to phonebook </h1>\n  </div>\n)\n\nexport default HomeView\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst BASE_USER_URL = `https://connections-api.herokuapp.com`;\nconst userLogout = \"/users/logout\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\n  \"auth/register\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/users/signup\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      rejectWithValue(toast.error(`Oops! Try again please!`));\n    }\n  }\n);\n\nconst logIn = createAsyncThunk(\n  \"auth/login\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/users/login\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      rejectWithValue(toast.error(`Oops! Try again please!`));\n    }\n  }\n);\n\nexport const logOut = createAsyncThunk(\n  \"users/logout\",\n  async (_, { rejectWithValue, getState }) => {\n    const state = getState();\n    const token = state.auth.token;\n    if (!token) return;\n    try {\n      const response = await fetch(BASE_USER_URL + userLogout, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      const data = await response.json();\n\n      return data;\n    } catch (err) {\n      console.log(err.message);\n      rejectWithValue(err.message);\n    }\n  }\n);\n\nconst refreshCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI, { rejectWithValue }) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  }\n);\n\nconst authOperations = {\n  register,\n  logIn,\n  logOut,\n  refreshCurrentUser,\n};\n\nexport default authOperations;\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\nconst getUserName = (state) => state.auth.user.name;\nconst getIsRefreshingCurrentUser = (state) =>\n  state.auth.isRefreshingCurrentUser;\nconst getError = (state) => state.auth.error;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getIsRefreshingCurrentUser,\n  getError,\n};\n\nexport default authSelectors;\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport authOperations from '../redux/auth/auth-operations'\nimport { toast } from 'react-toastify'\nimport authSelectors from '../redux/auth/auth-selectors'\nimport { useEffect } from 'react'\nimport * as React from 'react'\nimport Avatar from '@mui/material/Avatar'\n\nimport Button from '@mui/material/Button'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport TextField from '@mui/material/TextField'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport Box from '@mui/material/Box'\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport Typography from '@mui/material/Typography'\nimport Container from '@mui/material/Container'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\n\nconst theme = createTheme()\n\nexport default function LoginView() {\n  const dispatch = useDispatch()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState(null)\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\n  const errorLogIn = useSelector(authSelectors.getError)\n\n  useEffect(() => {\n    setError(errorLogIn)\n  }, [errorLogIn])\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value)\n      case 'password':\n        return setPassword(value)\n      default:\n        return\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    dispatch(authOperations.logIn({ email, password }))\n    toast.success(`Congrats! You've just successfully signed in!`)\n    setEmail('')\n    setPassword('')\n  }\n\n  return (\n    !isLoggedIn && (\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={handleSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Email Address\"\n                id=\"email\"\n                autoFocus\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                onClick={handleSubmit}\n              >\n                Sign In\n              </Button>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n    )\n  )\n}\n","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport authOperations from '../redux/auth/auth-operations'\nimport { toast } from 'react-toastify'\nimport * as React from 'react'\nimport Avatar from '@mui/material/Avatar'\nimport Button from '@mui/material/Button'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport TextField from '@mui/material/TextField'\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport Typography from '@mui/material/Typography'\nimport Container from '@mui/material/Container'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\n// import { useEffect } from \"react\";\n\nconst theme = createTheme()\n\nexport default function RegisterView() {\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value)\n      case 'email':\n        return setEmail(value)\n      case 'password':\n        return setPassword(value)\n      default:\n        return\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (password.length > 8) {\n      dispatch(authOperations.register({ name, email, password }))\n\n      setName('')\n      setEmail('')\n      setPassword('')\n      return toast.success(`Congrats! You've just signed up!`)\n    } else {\n      alert('Too short password')\n    }\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Register\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  autoFocus\n                  onChange={handleChange}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  onChange={handleChange}\n                  error={\n                    password.length < 1 || password.length > 8 ? false : true\n                  }\n                  helperText={\n                    password.length < 1 || password.length > 8\n                      ? ''\n                      : 'Password is too short!'\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}></Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  )\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <nav>\n      <Link to=\"/\" style={styles.link}>\n        Home\n      </Link>\n\n      {isLoggedIn && (\n        <Link to=\"/contacts\" style={styles.link}>\n          Contacts\n        </Link>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport Avatar from \"@mui/material/Avatar\";\nimport s from \"./UserMenu.module.css\";\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: 10,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <div style={styles.container}>\n      <Avatar src=\"/broken-image.jpg\" style={styles.avatar} />\n\n      <span style={styles.name}>Welcome, {name}</span>\n      <button\n        className={s.btn}\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Log out\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <Link to=\"/register\" style={styles.link}>\n        Sign Up\n      </Link>\n      <Link to=\"/login\" style={styles.link}>\n        Sign In\n      </Link>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport { useSelector } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu/UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nexport default function MenuAppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Navigation />\n          </Typography>\n          {auth && (\n            <div>\n              {!isLoggedIn ? (\n                <>\n                  <IconButton\n                    size=\"large\"\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                  >\n                    <AccountCircle />\n                  </IconButton>\n                  <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"right\",\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"right\",\n                    }}\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                  >\n                    <MenuItem onClick={handleClose}>\n                      <AuthNav />\n                    </MenuItem>\n                  </Menu>\n                </>\n              ) : (\n                <MenuItem onClick={handleClose}>\n                  <UserMenu />\n                </MenuItem>\n              )}\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import { Navigate } from 'react-router'\n\n\nexport default function PrivateRoute({ isLoggedIn, component: C }) {\n  return <>{isLoggedIn ? <C /> : <Navigate to=\"/login\" />}</>\n}\n","// import { Navigate } from \"react-router-dom\";\nimport { Navigate } from 'react-router'\nexport default function PublicRoute({\n  isLoggedIn,\n  component: Component,\n  restricted = false,\n  redirectTo,\n}) {\n  const shouldRedirect = isLoggedIn && restricted\n\n  return (\n    <>{shouldRedirect ? <Navigate to={'/contacts' || '/'} /> : <Component />}</>\n  )\n}\n","import s from \"./App.module.css\";\nimport ContactForm from \"../Components/ContactForm/ContactForm\";\nimport { Route, Routes } from \"react-router-dom\";\nimport HomeView from \"../views/HomeView\";\nimport LoginView from \"../views/LoginView\";\nimport RegisterView from \"../views/RegisterView\";\nimport MenuAppBar from \"../Components/AppBar\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../redux/auth/auth-operations\";\nimport PrivateRoute from \"../Components/PrivateRoute\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\nimport PublicRoute from \"../Components/PublicRoute\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const isRefreshingCurrentUser = useSelector(\n    authSelectors.getIsRefreshingCurrentUser\n  );\n\n  useEffect(() => {\n    dispatch(authOperations.refreshCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isRefreshingCurrentUser && (\n      <div className={s.App}>\n        <MenuAppBar />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <PublicRoute isLoggedIn={isLoggedIn} component={HomeView} />\n            }\n          />\n          <Route\n            path=\"/register\"\n            element={\n              <PublicRoute\n                isLoggedIn={isLoggedIn}\n                component={RegisterView}\n                restricted\n              />\n            }\n          />\n          <Route\n            path=\"/login\"\n            element={\n              <PublicRoute\n                isLoggedIn={isLoggedIn}\n                component={LoginView}\n                redirectTo=\"/contacts\"\n                restricted\n              />\n            }\n          />\n          <Route\n            path=\"/contacts\"\n            element={\n              <PrivateRoute isLoggedIn={isLoggedIn} component={ContactForm} />\n            }\n          />\n        </Routes>\n        <ToastContainer autoClose={3000} />\n      </div>\n    )\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport filterChange from \"./actions\";\nimport operations from \"./operations\";\n\nconst { addContacts, deleteContacts, fetchContacts } = operations;\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContacts.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContacts.fulfilled]: (state, action) => {\n    return state.filter((contact) => contact.id !== action.payload);\n  },\n});\n\nconst filter = createReducer(\"\", {\n  [filterChange]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, _) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.refreshCurrentUser.pending](state) {\n      state.isRefreshing = true;\n    },\n    [authOperations.refreshCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isRefreshing = false;\n    },\n    [authOperations.refreshCurrentUser.rejected](state) {\n      state.isRefreshing = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport contactsReducer from './contacts/reducer'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { authReducer } from './auth'\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n}\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devTools: process.env.NODE_ENV === 'development',\n})\n\nconst persistor = persistStore(store)\n\nexport { store, persistor }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__cdzpo\",\"formWrapper\":\"ContactForm_formWrapper__3tIIl\",\"labelWrapper\":\"ContactForm_labelWrapper__zoJu8\",\"form\":\"ContactForm_form__1Xfju\",\"label\":\"ContactForm_label__333LT\",\"input\":\"ContactForm_input__Cfty1\",\"button\":\"ContactForm_button__n9er7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__6sM8D\",\"textWrapper\":\"ContactList_textWrapper__2JZgh\",\"title\":\"ContactList_title__24AMn\",\"text\":\"ContactList_text__1x8xN\",\"button\":\"ContactList_button__28ppz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__ILI0F\",\"input\":\"Filter_input__1sZzL\",\"wrapper\":\"Filter_wrapper__1IqqT\"};"],"sourceRoot":""}